{
  "experiment_name": "ride_hailing_pricing_benchmark",
  "experiment_description": "Systematic benchmarking of 4 pricing methods for ride-hailing platforms",
  "version": "2.0.0",
  
  "data_config": {
    "s3_bucket": "taxi-pricing-benchmark",
    "data_source_base_url": "https://d37ci6vzurychx.cloudfront.net/trip-data",
    "supported_vehicle_types": ["green", "yellow", "fhv"],
    "supported_boroughs": ["Manhattan", "Brooklyn", "Queens", "Bronx", "Staten Island"],
    "reference_data": {
      "taxi_zones_file": "reference_data/taxi_zones.csv",
      "area_info_file": "reference_data/area_info.csv"
    },
    "data_preprocessing": {
      "min_trip_distance": 0.001,
      "min_total_amount": 0.001,
      "distance_conversion_factor": 1.60934,
      "max_sample_size": 5000
    }
  },
  
  "time_config": {
    "business_hours": {
      "start_hour": 10,
      "end_hour": 20,
      "description": "Standard business hours (Hikima replication)"
    },
    "full_day": {
      "start_hour": 0,
      "end_hour": 24,
      "description": "Full 24-hour analysis"
    },
    "time_window_minutes": 5,
    "monte_carlo_iterations": 100,
    "default_scenario_count": 24
  },
  
  "methods_config": {
    "HikimaMinMaxCostFlow": {
      "enabled": true,
      "description": "Hikima et al. MinMaxCost Flow algorithm",
      "parameters": {
        "epsilon": 1e-10,
        "alpha": 18.0,
        "s_taxi": 25.0,
        "acceptance_function": "PL",
        "pl_d": 3.0,
        "sigmoid_beta": 1.3,
        "sigmoid_gamma": 0.16539880833293433
      },
      "computational_complexity": "high",
      "expected_runtime_seconds": 30
    },
    
    "MAPS": {
      "enabled": true,
      "description": "Area-based pricing with bipartite matching",
      "parameters": {
        "alpha": 18.0,
        "s_taxi": 25.0,
        "s_0_rate": 1.5,
        "price_discretization_rate": 0.05,
        "max_matching_distance_km": 2.0,
        "acceptance_function": "PL",
        "sigmoid_beta": 1.3,
        "sigmoid_gamma": 0.16539880833293433
      },
      "computational_complexity": "medium",
      "expected_runtime_seconds": 15
    },
    
    "LinUCB": {
      "enabled": true,
      "description": "Contextual bandit learning with UCB",
      "parameters": {
        "ucb_alpha": 0.5,
        "base_price": 5.875,
        "price_multipliers": [0.6, 0.8, 1.0, 1.2, 1.4],
        "use_time_features": true,
        "use_location_features": true,
        "use_distance_features": true,
        "acceptance_function": "PL",
        "sigmoid_beta": 1.3,
        "sigmoid_gamma": 0.16539880833293433
      },
      "computational_complexity": "low",
      "expected_runtime_seconds": 5
    },
    
    "LinearProgram": {
      "enabled": true,
      "description": "Gupta-Nagarajan Linear Program optimization",
      "parameters": {
        "min_price_factor": 0.5,
        "max_price_factor": 2.0,
        "price_grid_size": 10,
        "solver_name": "PULP_CBC_CMD",
        "solver_timeout": 300,
        "solver_verbose": false,
        "acceptance_function": "sigmoid",
        "sigmoid_beta": 1.3,
        "sigmoid_gamma": 0.16539880833293433
      },
      "computational_complexity": "medium",
      "expected_runtime_seconds": 20
    }
  },
  
  "experiment_scenarios": {
    "hikima_replication": {
      "description": "Exact replication of Hikima et al. experimental setup",
      "time_range": "business_hours",
      "days": ["2019-10-01", "2019-10-02"],
      "vehicle_types": ["green", "yellow"],
      "boroughs": ["Manhattan"],
      "scenario_count": 24,
      "acceptance_functions": ["PL"],
      "methods": ["HikimaMinMaxCostFlow", "MAPS", "LinUCB"]
    },
    
    "comprehensive_benchmark": {
      "description": "Comprehensive comparison of all 4 methods",
      "time_range": "business_hours",
      "days": ["2019-10-01"],
      "vehicle_types": ["green", "yellow"],
      "boroughs": ["Manhattan", "Brooklyn"],
      "scenario_count": 24,
      "acceptance_functions": ["PL", "Sigmoid"],
      "methods": ["HikimaMinMaxCostFlow", "MAPS", "LinUCB", "LinearProgram"]
    },
    
    "extended_analysis": {
      "description": "Extended multi-day analysis for robustness testing",
      "time_range": "business_hours",
      "days": ["2019-10-01", "2019-10-02", "2019-10-03", "2019-10-04", "2019-10-05"],
      "vehicle_types": ["green", "yellow"],
      "boroughs": ["Manhattan"],
      "scenario_count": 24,
      "acceptance_functions": ["PL", "Sigmoid"],
      "methods": ["HikimaMinMaxCostFlow", "MAPS", "LinUCB", "LinearProgram"]
    },
    
    "full_day_analysis": {
      "description": "24-hour analysis to study temporal patterns",
      "time_range": "full_day",
      "days": ["2019-10-01"],
      "vehicle_types": ["green", "yellow"],
      "boroughs": ["Manhattan"],
      "scenario_count": 48,
      "acceptance_functions": ["PL"],
      "methods": ["HikimaMinMaxCostFlow", "MAPS", "LinUCB", "LinearProgram"]
    },
    
    "scalability_test": {
      "description": "Test scalability with different borough sizes",
      "time_range": "business_hours",
      "days": ["2019-10-01"],
      "vehicle_types": ["green", "yellow"],
      "boroughs": ["Manhattan", "Brooklyn", "Queens"],
      "scenario_count": 12,
      "acceptance_functions": ["PL"],
      "methods": ["MAPS", "LinUCB", "LinearProgram"]
    }
  },
  
  "aws_config": {
    "s3_bucket": "taxi-pricing-benchmark",
    "s3_prefixes": {
      "datasets": "datasets",
      "results": "experiments/results",
      "reference_data": "reference_data",
      "configs": "configs"
    },
    "lambda_config": {
      "timeout_seconds": 900,
      "memory_mb": 3008,
      "aws_region": "us-east-1",
      "environment_variables": {
        "PYTHONPATH": "/var/task/src",
        "EXPERIMENT_BUCKET": "taxi-pricing-benchmark"
      }
    }
  },
  
  "output_config": {
    "enable_detailed_logging": true,
    "save_intermediate_results": true,
    "statistical_tests": {
      "enable_significance_testing": true,
      "confidence_level": 0.95,
      "test_types": ["paired_t_test", "wilcoxon_signed_rank"]
    },
    "performance_metrics": [
      "objective_value",
      "computation_time",
      "match_rate",
      "average_price",
      "acceptance_rate",
      "revenue_per_request"
    ]
  },
  
  "validation_config": {
    "cross_validation": {
      "enabled": true,
      "folds": 5,
      "randomize_data": true
    },
    "parameter_sensitivity": {
      "enabled": true,
      "parameters_to_test": ["alpha", "s_taxi", "acceptance_function"],
      "variation_range": 0.2
    }
  }
} 